From f215fc96a37825d825fb2755a707fc4de77319fb Mon Sep 17 00:00:00 2001
From: Paul Wessel <pwessel@hawaii.edu>
Date: Sat, 29 Dec 2018 16:54:06 -1000
Subject: [PATCH] Clarify where GSHHG error messages are coming from

This is related to issue #121 but it was not clear where some of the error messages came from.  Now it should be clearer.
---
 src/gmt_shore.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/src/gmt_shore.c b/src/gmt_shore.c
index c132f9bb4..84bfea4bc 100644
--- a/src/gmt_shore.c
+++ b/src/gmt_shore.c
@@ -267,7 +267,7 @@ GMT_LOCAL char *shore_getpathname (struct GMT_CTRL *GMT, char *stem, char *path)
 				return (path);
 			}
 			else
-				GMT_Report (GMT->parent, GMT_MSG_NORMAL, "Found %s but cannot read it due to wrong permissions\n", path);
+				GMT_Report (GMT->parent, GMT_MSG_NORMAL, "1. GSHHG: Found %s but cannot read it due to wrong permissions\n", path);
 		}
 		else {
 			/* remove reference to invalid GMT->session.GSHHGDIR but don't free
@@ -278,16 +278,16 @@ GMT_LOCAL char *shore_getpathname (struct GMT_CTRL *GMT, char *stem, char *path)
 		}
 	}
 
-	/* 2. First check for coastline.conf */
+	/* 2. Next, check for coastline.conf */
 
 	if (gmt_getsharepath (GMT, "conf", "coastline", ".conf", path, F_OK) || gmt_getsharepath (GMT, "coast", "coastline", ".conf", path, F_OK)) {
 
 		/* We get here if coastline.conf exists - search among its directories for the named file */
 
 		GMT_Report (GMT->parent, GMT_MSG_DEBUG, "2. GSHHG: coastline.conf found at %s\n", path);
-		if (access (path, R_OK) == 0) {					/* File can be read */
+		if (access (path, R_OK) == 0) {				/* coastline.conf can be read */
 			if ((fp = fopen (path, "r")) == NULL) {		/* but Coverity still complains if we don't test if it's NULL */
-				GMT_Report (GMT->parent, GMT_MSG_NORMAL, "Failed to open %s\n", path);
+				GMT_Report (GMT->parent, GMT_MSG_NORMAL, "2. GSHHG: Failed to open %s\n", path);
 				return (NULL);
 			}
 			while (fgets (dir, GMT_BUFSIZ, fp)) {	/* Loop over all input lines until found or done */
@@ -313,13 +313,13 @@ GMT_LOCAL char *shore_getpathname (struct GMT_CTRL *GMT, char *stem, char *path)
 					sprintf(path, "%s/%s%s", dir, stem, ".cdf");
 					if (access(path, R_OK) == 0)	/* Yes, old .cdf version found */
 						goto L1;
-					GMT_Report(GMT->parent, GMT_MSG_NORMAL, "Found %s but cannot read it due to wrong permissions\n", path);
+					GMT_Report(GMT->parent, GMT_MSG_NORMAL, "2. GSHHG: Found %s but cannot read it due to wrong permissions\n", path);
 				}
 			}
 			fclose (fp);
 		}
 		else
-			GMT_Report (GMT->parent, GMT_MSG_NORMAL, "Found %s but cannot read it due to wrong permissions\n", path);
+			GMT_Report (GMT->parent, GMT_MSG_NORMAL, "2. GSHHG: Found %s but cannot read it due to wrong permissions\n", path);
 	}
 
 	/* 3. Then check for the named file itself */
@@ -340,9 +340,11 @@ GMT_LOCAL char *shore_getpathname (struct GMT_CTRL *GMT, char *stem, char *path)
 				GMT_Report (GMT->parent, GMT_MSG_DEBUG, "3. GSHHG: Failure, could not access %s\n", path);
 		}
 		else
-			GMT_Report (GMT->parent, GMT_MSG_NORMAL, "Found %s but cannot read it due to wrong permissions\n", path);
+			GMT_Report (GMT->parent, GMT_MSG_NORMAL, "3. GSHHG: Found %s but cannot read it due to wrong permissions\n", path);
 	}
 
+	/* 4. No success, just break down and cry */
+
 	GMT_Report (GMT->parent, GMT_MSG_DEBUG, "4. GSHHG: Failure, could not access any GSHHG files\n");
 	if (warn_once) {
 		warn_once = false;
