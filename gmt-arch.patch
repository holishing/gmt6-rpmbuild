diff -up gmt-5.1.1/src/common_sighandler.c.arch gmt-5.1.1/src/common_sighandler.c
--- gmt-5.1.1/src/common_sighandler.c.arch	2014-01-31 16:39:56.000000000 -0700
+++ gmt-5.1.1/src/common_sighandler.c	2014-10-06 09:59:39.299525565 -0600
@@ -75,16 +75,24 @@ void backtrace_symbols_fd(void *const *b
 #elif defined(SIZEOF_GREG_T)
 # ifdef __x86_64__
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.gregs[REG_RIP])
+# elif defined(__aarch64__)
+#  define UC_IP(uc) ((void *) (uc)->uc_mcontext.pc)
 # elif defined( __arm__)
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.arm_pc)
+# elif defined(__s390__)
+#  define UC_IP(uc) ((void *) (uc)->uc_mcontext.psw.addr)
 # else
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.gregs[REG_EIP])
 # endif
 #else
 # ifdef __x86_64__
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.rip)
-# elif defined( __arm__)
+# elif defined(__aarch64__)
+#  define UC_IP(uc) ((void *) (uc)->uc_mcontext.pc)
+# elif defined(__arm__)
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.arm_pc)
+# elif defined(__powerpc__) || defined(__powerpc64__)
+#  define UC_IP(uc) ((void *) (uc)->uc_mcontext.regs->nip)
 # else
 #  define UC_IP(uc) ((void *) (uc)->uc_mcontext.eip)
 # endif
diff -up gmt-5.1.1/src/gmt_config.h.in.arch gmt-5.1.1/src/gmt_config.h.in
--- gmt-5.1.1/src/gmt_config.h.in.arch	2014-02-17 14:27:37.000000000 -0700
+++ gmt-5.1.1/src/gmt_config.h.in	2014-10-06 09:57:41.682071649 -0600
@@ -283,13 +283,6 @@
 #cmakedefine HAVE__BYTESWAP_ULONG /* for 32 bit */
 #cmakedefine HAVE__BYTESWAP_UINT64 /* for 64 bit */
 
-/* Architecture type (32/64 bits) */
-#if !defined(__x86_64__) && !defined(__i386__) && SIZEOF_VOID_P == 4 /* on i386 */
-#	define __i386__ 1
-#elif !defined(__x86_64__) && !defined(__i386__) && SIZEOF_VOID_P == 8 /* on x86_64 */
-#	define __x86_64__ 1
-#endif
-
 #if !(defined(__LP64__) || defined(__LLP64__)) && defined(__x86_64__) && \
 		defined(SIZEOF_LONG_LONG) && defined(SIZEOF_LONG) && defined(SIZEOF_INT)
 #	if SIZEOF_LONG == 8 && SIZEOF_INT == 4 /* 64 bit longs and pointers (most UNIX) */
